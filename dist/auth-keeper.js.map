{"version":3,"file":"auth-keeper.js","mappings":"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","sources":["webpack://authKeeper/webpack/universalModuleDefinition","webpack://authKeeper/webpack/bootstrap","webpack://authKeeper/webpack/runtime/define property getters","webpack://authKeeper/webpack/runtime/hasOwnProperty shorthand","webpack://authKeeper/webpack/runtime/make namespace object","webpack://authKeeper/./lib/utils/http.js","webpack://authKeeper/./lib/index.js","webpack://authKeeper/./lib/pkce.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"authKeeper\"] = factory();\n\telse\n\t\troot[\"authKeeper\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export async function postRequest(url, params) {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: new URLSearchParams(params),\n    });\n  \n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n  \n    return response.json();\n  }\n  \n  export function parseQueryString(query) {\n    const params = new URLSearchParams(query);\n    return Object.fromEntries(params.entries());\n  }\n  ","import { generatePKCE, parseQueryString } from './pkce';\nimport { postRequest } from './utils/http';\n\nclass OAuthClient {\n  constructor({ clientId, redirectUri, authEndpoint, tokenEndpoint, grantType, clientSecret = null }) {\n    this.clientId = clientId;\n    this.redirectUri = redirectUri;\n    this.authEndpoint = authEndpoint;\n    this.tokenEndpoint = tokenEndpoint;\n    this.grantType = grantType;\n    this.clientSecret = clientSecret; // Optional for PKCE\n  }\n\n  async startAuthFlow() {\n    const state = this.generateRandomString();\n    localStorage.setItem('oauth_state', state);\n\n    if (this.grantType === 'pkce') {\n      const { codeVerifier, codeChallenge } = await generatePKCE();\n      localStorage.setItem('pkce_code_verifier', codeVerifier);\n\n      return `${this.authEndpoint}?response_type=code&client_id=${encodeURIComponent(this.clientId)}&state=${encodeURIComponent(state)}&redirect_uri=${encodeURIComponent(this.redirectUri)}&code_challenge=${encodeURIComponent(codeChallenge)}&code_challenge_method=S256`;\n    } else if (this.grantType === 'authorization_code') {\n      return `${this.authEndpoint}?response_type=code&client_id=${encodeURIComponent(this.clientId)}&state=${encodeURIComponent(state)}&redirect_uri=${encodeURIComponent(this.redirectUri)}`;\n    } else {\n      throw new Error('Unsupported grant type');\n    }\n  }\n\n  async handleCallback(callbackParams) {\n    const state = localStorage.getItem('oauth_state');\n    if (callbackParams.state !== state) throw new Error('Invalid state parameter');\n\n    const params = {\n      grant_type: this.grantType,\n      code: callbackParams.code,\n      client_id: this.clientId,\n      redirect_uri: this.redirectUri,\n    };\n\n    if (this.grantType === 'pkce') {\n      params.code_verifier = localStorage.getItem('pkce_code_verifier');\n    } else if (this.grantType === 'authorization_code' && this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n\n    const tokenResponse = await postRequest(this.tokenEndpoint, params);\n    localStorage.removeItem('oauth_state');\n    if (this.grantType === 'pkce') localStorage.removeItem('pkce_code_verifier');\n\n    return tokenResponse;\n  }\n\n  async refreshToken(refreshToken) {\n    const params = {\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: this.clientId,\n      ...(this.clientSecret && { client_secret: this.clientSecret }),\n    };\n\n    return await postRequest(this.tokenEndpoint, params);\n  }\n\n  generateRandomString() {\n    const array = new Uint32Array(28);\n    window.crypto.getRandomValues(array);\n    return Array.from(array, (dec) => ('0' + dec.toString(16)).substr(-2)).join('');\n  }\n}\n\nexport default OAuthClient;\n\n\n\n\n\n\n// // Module dependencies\n// const PKCE = require('./pkce'); // Import your PKCE logic\n\n// /**\n//  * Export default singleton.\n//  *\n//  * @api public\n//  */\n// exports = module.exports = new PKCE();\n\n// /**\n//  * Expose constructors.\n//  */\n// exports.PKCE = PKCE;\n\n// /**\n//  * Test Method\n//  * This allows a user to test the library functionality.\n//  */\n// exports.testLibrary = async function testLibrary(config) {\n//   try {\n//     console.log('Testing PKCE Library...');\n\n//     // Start the Auth Flow\n//     const authUrl = await exports.startAuthFlow(config);\n//     console.log('Generated Auth URL:', authUrl);\n\n//     // Simulate Callback Handling\n//     const callbackParams = {\n//       state: localStorage.getItem('pkce_state'),\n//       code: 'sample_auth_code'\n//     };\n\n//     const tokenResponse = await exports.handleCallback(config, callbackParams);\n//     console.log('Token Response:', tokenResponse);\n\n//     // Simulate Token Refresh\n//     const refreshResponse = await exports.refreshToken(config, 'sample_refresh_token');\n//     console.log('Refresh Token Response:', refreshResponse);\n\n//     console.log('Library Tested Successfully');\n//   } catch (error) {\n//     console.error('Error Testing Library:', error);\n//   }\n// };\n","export async function generatePKCE() {\n  const codeVerifier = generateRandomString();\n  const codeChallenge = await pkceChallengeFromVerifier(codeVerifier);\n  return { codeVerifier, codeChallenge };\n}\n\nexport function generateRandomString() {\n  const array = new Uint32Array(28);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, (dec) => ('0' + dec.toString(16)).substr(-2)).join('');\n}\n\nasync function sha256(plain) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n}\n\nexport async function pkceChallengeFromVerifier(v) {\n  const hashed = await sha256(v);\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(hashed)))\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","async","postRequest","url","params","response","fetch","method","headers","body","URLSearchParams","ok","Error","statusText","json","constructor","clientId","redirectUri","authEndpoint","tokenEndpoint","grantType","clientSecret","this","startAuthFlow","state","generateRandomString","localStorage","setItem","codeVerifier","codeChallenge","array","Uint32Array","window","crypto","getRandomValues","Array","from","dec","toString","substr","join","v","hashed","plain","data","TextEncoder","encode","subtle","digest","sha256","btoa","String","fromCharCode","apply","Uint8Array","replace","pkceChallengeFromVerifier","generatePKCE","encodeURIComponent","handleCallback","callbackParams","getItem","grant_type","code","client_id","redirect_uri","code_verifier","client_secret","tokenResponse","removeItem","refreshToken","refresh_token"],"sourceRoot":""}