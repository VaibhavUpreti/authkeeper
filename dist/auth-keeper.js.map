{"version":3,"file":"auth-keeper.js","mappings":"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","sources":["webpack://auth-keeper/webpack/universalModuleDefinition","webpack://auth-keeper/./lib/index.js","webpack://auth-keeper/./lib/pkce.js","webpack://auth-keeper/webpack/bootstrap","webpack://auth-keeper/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"auth-keeper\"] = factory();\n\telse\n\t\troot[\"auth-keeper\"] = factory();\n})(self, () => {\nreturn ","// Module dependencies\nconst PKCE = require('./pkce'); // Import your PKCE logic\n\n/**\n * Export default singleton.\n *\n * @api public\n */\nexports = module.exports = new PKCE();\n\n/**\n * Expose constructors.\n */\nexports.PKCE = PKCE;\n\n/**\n * Test Method\n * This allows a user to test the library functionality.\n */\nexports.testLibrary = async function testLibrary(config) {\n  try {\n    console.log('Testing PKCE Library...');\n\n    // Start the Auth Flow\n    const authUrl = await exports.startAuthFlow(config);\n    console.log('Generated Auth URL:', authUrl);\n\n    // Simulate Callback Handling\n    const callbackParams = {\n      state: localStorage.getItem('pkce_state'),\n      code: 'sample_auth_code'\n    };\n\n    const tokenResponse = await exports.handleCallback(config, callbackParams);\n    console.log('Token Response:', tokenResponse);\n\n    // Simulate Token Refresh\n    const refreshResponse = await exports.refreshToken(config, 'sample_refresh_token');\n    console.log('Refresh Token Response:', refreshResponse);\n\n    console.log('Library Tested Successfully');\n  } catch (error) {\n    console.error('Error Testing Library:', error);\n  }\n};\n","class PKCE {\n    constructor() {\n      // Any initialization logic if needed\n    }\n  \n    // Helper Functions\n    generateRandomString() {\n      const array = new Uint32Array(28);\n      window.crypto.getRandomValues(array);\n      return Array.from(array, dec => ('0' + dec.toString(16)).substr(-2)).join('');\n    }\n  \n    async sha256(plain) {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(plain);\n      return window.crypto.subtle.digest('SHA-256', data);\n    }\n  \n    base64urlencode(buffer) {\n      return btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n    }\n  \n    async pkceChallengeFromVerifier(verifier) {\n      const hashed = await this.sha256(verifier);\n      return this.base64urlencode(hashed);\n    }\n  \n    parseQueryString(queryString) {\n      return Object.fromEntries(new URLSearchParams(queryString));\n    }\n  \n    sendPostRequest(url, params) {\n      return new Promise((resolve, reject) => {\n        const request = new XMLHttpRequest();\n        request.open('POST', url, true);\n        request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n  \n        request.onload = () => {\n          try {\n            const response = JSON.parse(request.responseText);\n            if (request.status === 200) {\n              resolve(response);\n            } else {\n              reject(response);\n            }\n          } catch (error) {\n            reject({ error: 'Invalid JSON response' });\n          }\n        };\n  \n        request.onerror = () => reject({ error: 'Request failed' });\n  \n        const body = new URLSearchParams(params).toString();\n        request.send(body);\n      });\n    }\n  \n    // Library Functions\n    async startAuthFlow(config) {\n      const state = this.generateRandomString();\n      localStorage.setItem('pkce_state', state);\n  \n      const codeVerifier = this.generateRandomString();\n      localStorage.setItem('pkce_code_verifier', codeVerifier);\n  \n      const codeChallenge = await this.pkceChallengeFromVerifier(codeVerifier);\n  \n      const url = `${config.authorization_endpoint}?response_type=code&client_id=${encodeURIComponent(config.client_id)}&state=${encodeURIComponent(state)}&scope=${encodeURIComponent(config.requested_scopes)}&redirect_uri=${encodeURIComponent(config.redirect_uri)}&code_challenge=${encodeURIComponent(codeChallenge)}&code_challenge_method=S256`;\n  \n      return url;\n    }\n  \n    async handleCallback(config, callbackParams) {\n      if (localStorage.getItem('pkce_state') !== callbackParams.state) {\n        throw new Error('State does not match.');\n      }\n  \n      const codeVerifier = localStorage.getItem('pkce_code_verifier');\n      const params = {\n        grant_type: 'authorization_code',\n        code: callbackParams.code,\n        client_id: config.client_id,\n        redirect_uri: config.redirect_uri,\n        code_verifier: codeVerifier\n      };\n  \n      const tokenResponse = await this.sendPostRequest(config.token_endpoint, params);\n  \n      localStorage.removeItem('pkce_state');\n      localStorage.removeItem('pkce_code_verifier');\n  \n      return tokenResponse;\n    }\n  \n    async refreshToken(config, refreshToken) {\n      const params = {\n        grant_type: 'refresh_token',\n        refresh_token: refreshToken,\n        client_id: config.client_id\n      };\n  \n      return await this.sendPostRequest(config.token_endpoint, params);\n    }\n  }\n  \n  module.exports = PKCE;\n  ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(509);\n"],"names":["root","factory","exports","module","define","amd","self","PKCE","testLibrary","async","config","console","log","authUrl","startAuthFlow","callbackParams","state","localStorage","getItem","code","tokenResponse","handleCallback","refreshResponse","refreshToken","error","constructor","generateRandomString","array","Uint32Array","window","crypto","getRandomValues","Array","from","dec","toString","substr","join","sha256","plain","data","TextEncoder","encode","subtle","digest","base64urlencode","buffer","btoa","String","fromCharCode","apply","Uint8Array","replace","pkceChallengeFromVerifier","verifier","hashed","this","parseQueryString","queryString","Object","fromEntries","URLSearchParams","sendPostRequest","url","params","Promise","resolve","reject","request","XMLHttpRequest","open","setRequestHeader","onload","response","JSON","parse","responseText","status","onerror","body","send","setItem","codeVerifier","codeChallenge","authorization_endpoint","encodeURIComponent","client_id","requested_scopes","redirect_uri","Error","grant_type","code_verifier","token_endpoint","removeItem","refresh_token","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}