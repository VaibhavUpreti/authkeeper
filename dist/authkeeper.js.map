{"version":3,"file":"authkeeper.js","mappings":"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","sources":["webpack://authkeeper/webpack/universalModuleDefinition","webpack://authkeeper/webpack/bootstrap","webpack://authkeeper/webpack/runtime/define property getters","webpack://authkeeper/webpack/runtime/hasOwnProperty shorthand","webpack://authkeeper/webpack/runtime/make namespace object","webpack://authkeeper/./lib/utils/cryptoUtils.js","webpack://authkeeper/./lib/utils/getUserInfo.js","webpack://authkeeper/./lib/grants/pkce-grant.js","webpack://authkeeper/./lib/grants/refresh-token.js","webpack://authkeeper/./lib/client.js","webpack://authkeeper/./lib/utils/getEnvironment.js","webpack://authkeeper/./lib/grants/authorization-code.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"authkeeper\"] = factory();\n\telse\n\t\troot[\"authkeeper\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const isBrowser = typeof window !== 'undefined';\n\nclass CryptoUtils {\n    static generateRandomString(length = 28) {\n        if (isBrowser) {\n            const array = new Uint32Array(length);\n            window.crypto.getRandomValues(array);\n            return Array.from(array, dec => ('0' + dec.toString(16)).substr(-2)).join('');\n        } else {\n            const array = new Uint8Array(length);\n            require('crypto').randomFillSync(array);\n            return Array.from(array, byte => ('0' + byte.toString(16)).substr(-2)).join('');\n        }\n    }\n\n    static base64urlencode(buffer) {\n        let base64String;\n        if (isBrowser) {\n            base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)));\n        } else {\n            base64String = Buffer.from(buffer).toString('base64');\n        }\n\n        return base64String\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=+$/, '');\n    }\n\n    static async sha256(plain) {\n        if (isBrowser) {\n            const encoder = new TextEncoder();\n            const data = encoder.encode(plain);\n            const hashed = await window.crypto.subtle.digest('SHA-256', data);\n            return new Uint8Array(hashed);\n        } else {\n            const crypto = require('crypto');\n            const hash = crypto.createHash('sha256');\n            hash.update(plain);\n            return hash.digest();\n        }\n    }\n\n    static async pkceChallengeFromVerifier(verifier) {\n        const hashed = await this.sha256(verifier);\n        return this.base64urlencode(hashed);\n    }\n\n    static parseQueryString(query) {\n        const params = new URLSearchParams(query);\n        const result = {};\n        for (let [key, value] of params.entries()) {\n            result[key] = value;\n        }\n        return result;\n    }\n}\n\nexport default CryptoUtils;\n","\n/**\n * Fetches user information using the access token.\n * @param {Object} config - OAuth configuration.\n * @param {string} accessToken - Access token.\n * @returns {Object|null} - User info if successful, null otherwise.\n */\nasync function fetchUserInfo(config, accessToken) {\n    const baseUrl = new URL(config.token_url).origin;\n    const userInfoUrl = `${baseUrl}/userinfo`;\n\n    const response = await fetch(userInfoUrl, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${accessToken}`,\n        },\n    });\n\n    if (!response.ok) {\n        console.error(\"User info request failed:\", await response.text());\n        return null;\n    }\n\n    try {\n        return await response.json();\n    } catch (err) {\n        console.error(\"Error parsing user info response JSON:\", err);\n        return null;\n    }\n}\n\nexport {fetchUserInfo};","// For client and native apps\n\nimport CryptoUtils from '../utils/cryptoUtils.js';\nimport { fetchUserInfo } from '../utils/getUserInfo.js'\n/**\n * Initiates the OAuth 2.0 PKCE Authorization Flow.\n * Generates state and code verifier, stores them in localStorage, and redirects to the authorization URL.\n * @param {Object} config - OAuth configuration.\n */\nexport async function startAuthFlow(config) {\n    const state = CryptoUtils.generateRandomString();\n    const codeVerifier = CryptoUtils.generateRandomString();\n    \n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"pkce_state\", state);\n        localStorage.setItem(\"pkce_code_verifier\", codeVerifier);\n    }\n    const codeChallenge = await CryptoUtils.pkceChallengeFromVerifier(codeVerifier);\n    const url = `${config.authorization_url}?response_type=code&client_id=${encodeURIComponent(config.client_id)}&state=${encodeURIComponent(state)}&scope=${encodeURIComponent(config.scope)}&redirect_uri=${encodeURIComponent(config.redirect_uri)}&code_challenge=${encodeURIComponent(codeChallenge)}&code_challenge_method=S256`;\n    // window.location = url;\n    return url;\n}\n\n/**\n * Handles the OAuth 2.0 callback and processes the authorization code.\n * @param {Object} config - OAuth configuration.\n * @returns {Object|null} - Token data if successful, null otherwise.\n */\nexport async function handleCallback(config) {\n    const query = CryptoUtils.parseQueryString(window.location.search.substring(1));\n\n    if (query.error) {\n        alert(\"Error: \" + query.error);\n        return null;\n    }\n\n    if (query.code) {\n        if (localStorage.getItem(\"pkce_state\") !== query.state) {\n            alert(\"Invalid state\");\n            return null;\n        }\n        return exchangeAuthCodeForToken(config, query.code);\n    }\n\n    return null;\n}\n\n/**\n * Exchanges the authorization code for tokens.\n * @param {Object} config - OAuth configuration.\n * @param {string} code - Authorization code.\n * @returns {Object|null} - Token data if successful, null otherwise.\n */\nexport async function exchangeAuthCodeForToken(config, code) {\n    const codeVerifier = localStorage.getItem(\"pkce_code_verifier\");\n    if (!codeVerifier) {\n        console.error(\"Code verifier is missing from localStorage.\");\n        return null;\n    }\n\n    const payload = {\n        client_id: config.client_id,\n        grant_type: \"authorization_code\",\n        code,\n        redirect_uri: config.redirect_uri,\n        code_verifier: codeVerifier,\n    };\n\n    const response = await fetch(config.token_url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n    });\n\n    if (!response.ok) {\n        console.error(\"Token exchange failed:\", await response.text());\n        return null;\n    }\n\n    const data = await response.json();\n   \n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"access_token\", data.access_token);\n        localStorage.setItem(\"id_token\", data.id_token);\n        localStorage.setItem(\"expires_in\", data.expires_in.toString());\n        localStorage.setItem(\"refresh_token\", data.refresh_token);\n    }\n\n    const userInfo = await fetchUserInfo(config, data.access_token);\n    if (userInfo) {\n        localStorage.setItem(\"current_user\", JSON.stringify(userInfo));\n        return {\n            access_token: data.access_token,\n            id_token: data.id_token,\n            expires_in: data.expires_in,\n            user_info: userInfo,\n        };\n    }\n\n    return null;\n}","/**\n * Refreshes the access token using the refresh token.\n * @param {Object} config - OAuth configuration.\n * @param {string} refreshToken - The refresh token obtained earlier.\n * @returns {Object|null} - Token data if successful, null otherwise.\n */\nexport async function refreshAccessToken(config, refreshToken) {\n    const payload = new URLSearchParams({\n        grant_type: \"refresh_token\",\n        client_id: config.client_id,\n   //     client_secret: config.client_secret,\n        refresh_token: refreshToken,\n    });\n\n    if (config.client_secret) {\n        payload.append('client_secret', config.client_secret);\n    }\n    const response = await fetch(config.token_url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\", \n        },\n        body: payload.toString(),\n    });\n\n    if (!response.ok) {\n        console.error(\"Refresh token request failed:\", await response.text());\n        return null;\n    }\n\n    const data = await response.json();\n\n    // Check if we are in the browser and then store the tokens\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"access_token\", data.access_token);\n        localStorage.setItem(\"id_token\", data.id_token);\n        localStorage.setItem(\"expires_in\", data.expires_in.toString());\n    }\n    return data;\n}","import { getEnvironment } from './utils/getEnvironment.js';\nimport { startAuthFlow as browserStartAuthFlow, handleCallback as browserHandleCallback, exchangeAuthCodeForToken as browserExchangeAuthCodeForToken } from './grants/pkce-grant.js';\nimport { startAuthFlow as serverStartAuthFlow, handleCallback as serverHandleCallback, exchangeAuthCodeForToken as serverExchangeAuthCodeForToken } from './grants/authorization-code.js';\nimport { refreshAccessToken } from './grants/refresh-token.js';\nimport { fetchUserInfo } from './utils/getUserInfo.js';\n\nclass OAuthClient {\n    constructor(config, environment = getEnvironment()) {\n        this.config = config;\n        this.environment = environment;\n    }\n\n    async startAuthFlow() {\n        if (this.environment === \"browser\" || this.environment === \"mobile\") {\n            return browserStartAuthFlow(this.config);\n        } else if (this.environment === \"server\") {\n            return serverStartAuthFlow(this.config);\n        } else {\n            throw new Error(`Unknown environment: ${this.environment}`);\n        }\n    }\n\n    async handleCallback() {\n        if (this.environment === \"browser\" || this.environment === \"mobile\") {\n            return browserHandleCallback(this.config);\n        } else if (this.environment === \"server\") {\n            return serverHandleCallback(this.config);\n        } else {\n            throw new Error(`Unknown environment: ${this.environment}`);\n        }\n    }\n\n    async exchangeAuthCodeForToken(code) {\n        if (this.environment === \"browser\" || this.environment === \"mobile\") {\n            return browserExchangeAuthCodeForToken(this.config, code);\n        } else if (this.environment === \"server\") {\n            return serverExchangeAuthCodeForToken(this.config, code);\n        } else {\n            throw new Error(`Unknown environment: ${this.environment}`);\n        }\n    }\n\n    async refreshAccessToken(refreshToken) {\n        if (this.environment === \"browser\" || this.environment === \"mobile\") {\n          const refreshToken = localStorage.getItem('refresh_token');\n          return refreshAccessToken(this.config, refreshToken);\n          } else if (this.environment === \"server\") {\n            return refreshAccessToken(this.config, refreshToken);\n        } else {\n            throw new Error(`Unknown environment: ${this.environment}`);\n        }\n    }\n\n    async getUserInfo(accessToken) {\n        return fetchUserInfo(accessToken);\n    }\n}\n\nexport { OAuthClient };","export function getEnvironment() {\n    if (typeof window !== \"undefined\" && typeof window.document !== \"undefined\") {\n        return \"browser\";\n    } else {\n        return \"server\";\n    }\n}","export async function startAuthFlow(config) {\n    const url = `${config.authorization_url}?response_type=code&client_id=${encodeURIComponent(config.client_id)}&scope=${encodeURIComponent(config.scope)}&redirect_uri=${encodeURIComponent(config.redirect_uri)}`;\n    return url;\n}\n\nexport async function handleCallback(config) {\n\n    const payload = {\n        client_id: config.client_id,\n        response_type: \"code\",\n        scope: \"offline_access profile emal\",\n        redirect_uri: config.redirect_uri\n    }\n    const response = await fetch(config.authorization_url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n    });\n\n\n    if (!response.ok) {\n        console.error(\"Token exchange failed:\", await response.text());\n        return null;\n    }\n    const data = response.json();\n    return data;\n}\n\nexport async function exchangeAuthCodeForToken(config, code) {\n    const payload = {\n        client_id: config.client_id,\n        client_secret: config.client_secret,\n        grant_type: \"authorization_code\",\n        code,\n        redirect_uri: config.redirect_uri,\n    };\n\n    const response = await fetch(config.token_url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n    });\n\n    if (!response.ok) {\n        console.error(\"Token exchange failed:\", await response.text());\n        return null;\n    }\n\n    return response.json();\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","isBrowser","window","generateRandomString","length","array","Uint32Array","crypto","getRandomValues","Array","from","dec","toString","substr","join","Uint8Array","require","randomFillSync","byte","base64urlencode","buffer","base64String","btoa","String","fromCharCode","apply","Buffer","replace","sha256","plain","data","TextEncoder","encode","hashed","subtle","digest","hash","createHash","update","pkceChallengeFromVerifier","verifier","this","parseQueryString","query","params","URLSearchParams","result","entries","async","fetchUserInfo","config","accessToken","userInfoUrl","URL","token_url","origin","response","fetch","method","headers","ok","console","error","text","json","err","exchangeAuthCodeForToken","code","codeVerifier","localStorage","getItem","payload","client_id","grant_type","redirect_uri","code_verifier","body","JSON","stringify","setItem","access_token","id_token","expires_in","refresh_token","userInfo","user_info","refreshAccessToken","refreshToken","client_secret","append","OAuthClient","constructor","environment","document","getEnvironment","startAuthFlow","state","codeChallenge","authorization_url","encodeURIComponent","scope","Error","handleCallback","location","search","substring","alert","response_type","getUserInfo"],"sourceRoot":""}