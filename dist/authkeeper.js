!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.authkeeper=t():e.authkeeper=t()}(self,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{OAuthClient:()=>r});class r{constructor(e){this.client_id=e.client_id,this.client_secret=e.client_secret,this.redirect_uri=e.redirect_uri,this.authorization_url=e.authorization_url,this.token_url=e.token_url,this.scope=e.scope}generateRandomString(e=28){const t=new Uint32Array(e);return window.crypto.getRandomValues(t),Array.from(t,(e=>("0"+e.toString(16)).substr(-2))).join("")}base64urlencode(e){return btoa(String.fromCharCode.apply(null,new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}async pkceChallengeFromVerifier(e){const t=await this.sha256(e);return this.base64urlencode(t)}sha256(e){const t=(new TextEncoder).encode(e);return window.crypto.subtle.digest("SHA-256",t)}async startAuthFlow(){const e=this.generateRandomString();localStorage.setItem("pkce_state",e);const t=this.generateRandomString();localStorage.setItem("pkce_code_verifier",t);const r=await this.pkceChallengeFromVerifier(t),o=`${this.authorization_url}?response_type=code&client_id=${encodeURIComponent(this.client_id)}&state=${encodeURIComponent(e)}&scope=${encodeURIComponent(this.scope)}&redirect_uri=${encodeURIComponent(this.redirect_uri)}&code_challenge=${encodeURIComponent(r)}&code_challenge_method=S256`;window.location=o}async handleCallback(){const e=this.parseQueryString(window.location.search.substring(1));e.error&&alert("Error: "+e.error),e.code&&(localStorage.getItem("pkce_state")!==e.state?alert("Invalid state"):await this.exchangeAuthCodeForToken(e.code)),localStorage.removeItem("pkce_state"),localStorage.removeItem("pkce_code_verifier")}async exchangeAuthCodeForToken(e){const t=localStorage.getItem("pkce_code_verifier"),r=new URLSearchParams;r.append("grant_type","authorization_code"),r.append("code",e),r.append("client_id",this.client_id),r.append("redirect_uri",this.redirect_uri),r.append("code_verifier",t);try{const e=await fetch(this.token_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:r.toString()}),t=await e.json();e.ok?(document.getElementById("access_token").innerText=t.access_token,document.getElementById("token").classList.remove("hidden")):(document.getElementById("error_details").innerText=t.error,document.getElementById("error").classList.remove("hidden"))}catch(e){console.error("Error exchanging auth code:",e)}}parseQueryString(e){const t=new URLSearchParams(e),r={};for(let[e,o]of t.entries())r[e]=o;return r}}return t})()));
//# sourceMappingURL=authkeeper.js.map